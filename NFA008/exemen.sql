/* Question 2*/
BEGIN TRANSACTION;

CREATE TABLE TRANSPORT (
    TRA_CD char(6),
    IMMAT char(9),
    CHF_MAT char(3),
    TRA_DATE date DEFAULT CURRENT_DATE,
    HA char(4) CHECK (SUBSTRING(HA,1,2)::INTEGER >= 7 AND SUBSTRING(HA,1,2)::INTEGER <= 19 AND SUBSTRING(HA,3,4)::INTEGER >= 0 AND SUBSTRING(HA,3,4)::INTEGER <= 59),
    HD char(4) CHECK (HD<HA), 
    PRIMARY KEY (TRA_CD)
);

CREATE TABLE CHANTIER (
    CD_CHA char(9),
    ADR_CHA varchar(40),
    DEB_CHA date,
    TRAVAUX varchar(25) NOT NULL CHECK (TRAVAUX = upper(TRAVAUX)),
    PRIMARY KEY (CD_CHA) 
);

CREATE TABLE CHARGEMENT (
    TRA_CD char(6),
    CD_CHA char(9),
    PDS int2,
    VOL int2,
    PRIMARY KEY (TRA_CD,CD_CHA),
    FOREIGN KEY (TRA_CD) REFERENCES TRANSPORT (TRA_CD),
    FOREIGN KEY (CD_CHA) REFERENCES CHANTIER (CD_CHA)
);

COMMIT;
/* QUestion 2*/
DELETE FROM CHANTIER WHERE DEB_CHA < '2000-01-01';

/*QUestion 3*/ 
UPDATE CHANTIER SET DEB_CHA = DEB_CHA + 3 WHERE DEB_CHA = '2014-12-24';

/*Question 4*/ 
BEGIN TRANSACTION;
ALTER TABLE TYPE_CAMION DROP CONSTRAINT CK_PAV;
ALTER TABLE TYPE_CAMION ADD CHECK (PAV >= 0 AND PAV<= 100);
COMMIT;

/*P3
R2 a*/
SELECT cht.ADRESSE, chr.PDS, chr.VOL FROM CHANTIER cht, CHARGEMENT chr,TRANSPORT t, CHAUFFEUR chf
WHERE (cht.CD_CHA = chr.CD_CHA AND chr.TRA_CD = t.TRA_CD AND t.CHF_MAT = chf.CHF_MAT) 
AND chf.CHF LIKE 'MATTIC%' AND (chr.PDS > 15 OR chr.VOL > 10)
ORDER BY chr.PDS, chr.VOL;
/*b*/
SELECT cht.ADRESSE, chr.PDS, chr.VOL FROM CHANTIER cht
JOIN CHARGEMENT chr USING(CD_CHA)
WHERE TRA_CD IN (
    SELECT TRA_CD FROM TRANSPORT 
    JOIN CHAUFFEUR USING(CHF_MAT)
    WHERE CHF LIKE 'MATTIC%'
)
ORDER BY chr.PDS, chr.VOL;

/*R3*/
SELECT CHF_MAT, TRA_DATE AS Le, COUNT(*) AS Nombre
FROM CHAUFFEUR
JOIN TRANSPORT USING(CHF_MAT)
GROUP BY CHF_MAT, TRA_DATE
HAVING COUNT(*) > 3
ORDER BY Nombre;

/*R4*/
SELECT CHF, CHF_PR, COALESCE(IMMAT,'Pas de transport') 
FROM CHAUFFEUR
LEFT JOIN TRANSPORT USING(CHF_MAT);
/*R5*/

CREATE OR REPLACE FUNCTION TotalTransport(immatriculation CAMION.IMMAT%TYPE) RETURNS INTEGER LANGUAGE plpgsql AS $$
DECLARE
transport RECORD;
rtr integer := 0;
BEGIN
FOR transport IN (  SELECT * 
                    FROM TRANSPORT 
                    JOIN CHARGEMENT USING (TRA_CD) 
                    WHERE IMMAT = immatriculation) 
    LOOP
        rtr := rtr + transport.PDS;
    END LOOP;
    RETURN rtr;
END
$$;